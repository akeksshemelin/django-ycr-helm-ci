name: Build & Deploy (tag)

on:
  push:
    tags:
      - 'v*'
      - '[0-9]+.[0-9]+.[0-9]+'

env:
  IMAGE_NAME: django-app

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install yc CLI
        run: |
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          echo "$HOME/yandex-cloud/bin" >> $GITHUB_PATH

      - name: Configure yc SA key (from base64)
        run: |
          echo "${{ secrets.YC_SA_KEY_JSON_B64 }}" | base64 -d > sa-key.json
          yc config set service-account-key sa-key.json
          yc config set token ""

      - name: Docker login to YCR (IAM)
        run: |
          TOKEN=$(yc iam create-token)
          echo "$TOKEN" | docker login cr.yandex -u iam --password-stdin

      - name: Build & Push
        env:
          TAG: ${{ github.ref_name }}
        run: |
          IMAGE="cr.yandex/${{ secrets.REGISTRY_ID }}/${{ env.IMAGE_NAME }}:${TAG}"
          docker build -t "$IMAGE" .
          docker push "$IMAGE"
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install yc CLI
        run: |
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          echo "$HOME/yandex-cloud/bin" >> $GITHUB_PATH

      - name: Setup kubectl & helm
        run: |
          sudo apt-get update && sudo apt-get install -y kubectl
          curl -fsSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Kubeconfig
        run: |
          echo "${{ secrets.KUBE_CONFIG_B64 }}" | base64 -d > kubeconfig
          echo "KUBECONFIG=$PWD/kubeconfig" >> $GITHUB_ENV

      - name: Configure yc SA key (from base64)
        run: |
          echo "${{ secrets.YC_SA_KEY_JSON_B64 }}" | base64 -d > sa-key.json
          yc config set service-account-key sa-key.json
          yc config set token ""

      - name: Ensure namespace
        run: |
          kubectl create ns "${{ secrets.KUBE_NAMESPACE }}" --dry-run=client -o yaml | kubectl apply -f -

      - name: Ensure imagePullSecret ycr-pull
        run: |
          TOKEN=$(yc iam create-token)
          kubectl -n "${{ secrets.KUBE_NAMESPACE }}" delete secret ycr-pull --ignore-not-found
          kubectl -n "${{ secrets.KUBE_NAMESPACE }}" create secret docker-registry ycr-pull \
            --docker-server=cr.yandex \
            --docker-username=iam \
            --docker-password="$TOKEN" \
            --docker-email=none@example.com

      - name: Helm upgrade/install
        env:
          TAG: ${{ github.ref_name }}
        run: |
          helm upgrade --install django ./helm/django-postgres \
            --namespace "${{ secrets.KUBE_NAMESPACE }}" \
            --set image.registry=cr.yandex \
            --set image.repo="${{ secrets.REGISTRY_ID }}/django-app" \
            --set image.tag="${TAG}" \
            --set image.imagePullSecrets[0]=ycr-pull
